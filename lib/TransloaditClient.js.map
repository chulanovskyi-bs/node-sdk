{"version":3,"sources":["../src/TransloaditClient.js"],"names":["reqr","global","GENTLY","hijack","require","request","crypto","_","fs","retry","PaginationStream","unknownErrMsg","TransloaditClient","opts","useSsl","authKey","Error","authSecret","_authKey","_authSecret","_service","service","_region","region","_protocol","_streams","_lastUsedAssemblyUrl","name","stream","pause","path","createReadStream","on","console","error","err","addStream","cb","params","fields","callback","called","result","_serviceUrl","requestOpts","url","method","timeout","streams","label","push","sendRequest","_remoteJson","left","ok","message","ncompleted","streamErrCb","length","Array","from","access","F_OK","R_OK","assemblyId","getAssembly","assembly_url","assembly_id","notifyUrl","notify_url","pageno","listAssemblyNotifications","extend","page","listAssemblies","retryOpts","retries","factor","minTimeout","maxTimeout","operation","attempt","mainError","assembly_ssl_url","templateId","listTemplates","month","jsonParams","_prepareParams","signature","_calcSignature","toSign","createHmac","update","Buffer","digest","req","sigData","calcSignature","form","append","key","val","isObject","isArray","JSON","stringify","each","value","indexOf","encodeURIComponent","auth","expires","_getExpiresDate","expiresDate","Date","setDate","getDate","toISOString","__remoteJson","warn","info","retryIn","_timeouts","unshift","code","undefined","_appendParamsToUrl","uri","headers","body","statusCode","parse","e","abbr","substr","msg","_appendForm","module","exports"],"mappings":"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","file":"TransloaditClient.js","sourcesContent":["const reqr = global.GENTLY ? GENTLY.hijack(require) : require\nconst request = reqr('request')\nconst crypto = reqr('crypto')\nconst _ = reqr('underscore')\nconst fs = reqr('fs')\nconst retry = reqr('retry')\nconst PaginationStream = reqr('./PaginationStream')\n\nlet unknownErrMsg = 'Unknown error. Please report this at '\nunknownErrMsg += 'https://github.com/transloadit/node-sdk/issues/new?title=Unknown%20error'\n\nclass TransloaditClient {\n  constructor (opts = {}) {\n    if (opts.useSsl == null) {\n      opts.useSsl = true\n    }\n\n    if (opts.authKey == null) {\n      throw new Error('Please provide an authKey')\n    }\n\n    if (opts.authSecret == null) {\n      throw new Error('Please provide an authSecret')\n    }\n\n    this._authKey = opts.authKey\n    this._authSecret = opts.authSecret\n    this._service = opts.service || 'api2.transloadit.com'\n    this._region = opts.region || 'us-east-1'\n    this._protocol = opts.useSsl ? 'https://' : 'http://'\n    this._streams = {}\n\n    this._lastUsedAssemblyUrl = ''\n  }\n\n  addStream (name, stream) {\n    stream.pause()\n    this._streams[name] = stream\n  }\n\n  addFile (name, path) {\n    const stream = fs.createReadStream(path)\n    stream.on('error', err => {\n      // handle the error event to avoid the error being thrown\n      console.error(err)\n    })\n    this.addStream(name, stream)\n  }\n\n  getLastUsedAssemblyUrl () {\n    return this._lastUsedAssemblyUrl\n  }\n\n  createAssembly ({ params, fields }, cb) {\n    let stream\n    const callback = cb\n    let called = false\n    cb = (err, result) => {\n      if (!called) {\n        called = true\n        callback(err, result)\n      }\n    }\n\n    this._lastUsedAssemblyUrl = `${this._serviceUrl()}/assemblies`\n\n    const requestOpts = {\n      url    : this._lastUsedAssemblyUrl,\n      method : 'post',\n      timeout: 24 * 60 * 60 * 1000, // 1 day\n      params : params || {},\n      fields : fields || {},\n    }\n\n    const streams = (() => {\n      const result = []\n      for (let label in this._streams) {\n        stream = this._streams[label]\n        result.push(stream)\n      }\n      return result\n    })()\n\n    const sendRequest = () => {\n      this._remoteJson(requestOpts, (err, result) => {\n        // reset streams so they do not get used again in subsequent requests\n        let left\n        this._streams = {}\n\n        if (err) {\n          return cb(err)\n        }\n\n        if (result && result.ok) {\n          return cb(null, result)\n        }\n\n        err = new Error((left = result.error != null ? result.error : result.message) != null ? left : unknownErrMsg)\n        cb(err)\n      })\n    }\n\n    let ncompleted = 0\n    const streamErrCb = err => {\n      if (err != null) {\n        cb(err)\n      }\n\n      if (++ncompleted === streams.length) {\n        sendRequest()\n      }\n    }\n\n    for (stream of Array.from(streams)) {\n      stream.on('error', cb)\n\n      if (stream.path == null) {\n        streamErrCb(null)\n        continue\n      }\n\n      fs.access(stream.path, fs.F_OK | fs.R_OK, err => {\n        if (err != null) {\n          return streamErrCb(err)\n        }\n\n        streamErrCb(null)\n      })\n    }\n\n    // make sure sendRequest gets called when there are no @_streams\n    if (streams.length === 0) {\n      sendRequest()\n    }\n  }\n\n  deleteAssembly (assemblyId, cb) {\n    this.getAssembly(assemblyId, (err, { assembly_url } = {}) => {\n      if (err != null) {\n        return cb(err)\n      }\n\n      const opts = {\n        url    : assembly_url,\n        timeout: 5000,\n        method : 'del',\n        params : {},\n      }\n\n      this._remoteJson(opts, cb)\n    })\n  }\n\n  replayAssembly ({ assembly_id: assemblyId, notify_url: notifyUrl }, cb) {\n    const requestOpts = {\n      url   : this._serviceUrl() + `/assemblies/${assemblyId}/replay`,\n      method: 'post',\n    }\n\n    if (notifyUrl != null) {\n      requestOpts.params = { notifyUrl }\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  replayAssemblyNotification ({ assembly_id: assemblyId, notify_url: notifyUrl }, cb) {\n    const requestOpts = {\n      url   : this._serviceUrl() + `/assembly_notifications/${assemblyId}/replay`,\n      method: 'post',\n    }\n\n    if (notifyUrl != null) {\n      requestOpts.params = { notifyUrl }\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  listAssemblyNotifications (params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/assembly_notifications`,\n      method: 'get',\n      params: params || {},\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  streamAssemblyNotifications (params) {\n    return new PaginationStream((pageno, cb) => {\n      this.listAssemblyNotifications(_.extend({}, params, { page: pageno }), cb)\n    })\n  }\n\n  listAssemblies (params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/assemblies`,\n      method: 'get',\n      params: params || {},\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  streamAssemblies (params) {\n    return new PaginationStream((pageno, cb) => {\n      this.listAssemblies(_.extend({}, params, { page: pageno }), cb)\n    })\n  }\n\n  getAssembly (assemblyId, cb) {\n    const opts = { url: this._serviceUrl() + `/assemblies/${assemblyId}` }\n\n    const retryOpts = {\n      retries   : 5,\n      factor    : 3.28,\n      minTimeout: 1 * 1000,\n      maxTimeout: 8 * 1000,\n    }\n\n    const operation = retry.operation(retryOpts)\n    operation.attempt(attempt => {\n      this._remoteJson(opts, (err, result) => {\n        if (err != null) {\n          if (operation.retry(err)) {\n            return\n          }\n\n          return cb(operation.mainError())\n        }\n\n        if (result.assembly_url == null || result.assembly_ssl_url == null) {\n          if (operation.retry(new Error('got incomplete assembly status response'))) {\n            return\n          }\n\n          return cb(operation.mainError())\n        }\n\n        cb(null, result)\n      })\n    })\n  }\n\n  createTemplate (params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/templates`,\n      method: 'post',\n      params: params || {},\n    }\n\n    this._remoteJson(requestOpts, (err, result) => {\n      let left\n      if (err) {\n        return cb(err)\n      }\n\n      if (result && result.ok) {\n        return cb(null, result)\n      }\n\n      err = new Error((left = result.error != null ? result.error : result.message) != null ? left : unknownErrMsg)\n      cb(err)\n    })\n  }\n\n  editTemplate (templateId, params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/templates/${templateId}`,\n      method: 'put',\n      params: params || {},\n    }\n\n    this._remoteJson(requestOpts, (err, result) => {\n      let left\n      if (err) {\n        return cb(err)\n      }\n\n      if (result && result.ok) {\n        return cb(null, result)\n      }\n\n      err = new Error((left = result.error != null ? result.error : result.message) != null ? left : unknownErrMsg)\n      cb(err)\n    })\n  }\n\n  deleteTemplate (templateId, cb) {\n    const requestOpts = {\n      url   : this._serviceUrl() + `/templates/${templateId}`,\n      method: 'del',\n      params: {},\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  getTemplate (templateId, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/templates/${templateId}`,\n      method: 'get',\n      params: {},\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  listTemplates (params, cb) {\n    const requestOpts = {\n      url   : `${this._serviceUrl()}/templates`,\n      method: 'get',\n      params: params || {},\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  streamTemplates (params) {\n    return new PaginationStream((pageno, cb) => {\n      this.listTemplates(_.extend({}, params, { page: pageno }), cb)\n    })\n  }\n\n  getBill (month, cb) {\n    const requestOpts = {\n      url   : this._serviceUrl() + `/bill/${month}`,\n      method: 'get',\n      params: {},\n    }\n\n    this._remoteJson(requestOpts, cb)\n  }\n\n  calcSignature (params) {\n    const jsonParams = this._prepareParams(params)\n    const signature = this._calcSignature(jsonParams)\n\n    return { signature, params: jsonParams }\n  }\n\n  _calcSignature (toSign) {\n    return crypto\n      .createHmac('sha1', this._authSecret)\n      .update(Buffer.from(toSign, 'utf-8'))\n      .digest('hex')\n  }\n\n  // Sets the multipart/form-data for POST, PUT and DELETE requests, including\n  // the streams, the signed params, and any additional fields.\n  _appendForm (req, params, fields) {\n    const sigData = this.calcSignature(params)\n    const jsonParams = sigData.params\n    const { signature } = sigData\n    const form = req.form()\n\n    form.append('params', jsonParams)\n\n    if (fields == null) {\n      fields = []\n    }\n\n    for (let key in fields) {\n      let val = fields[key]\n      if (_.isObject(fields[key]) || _.isArray(fields[key])) {\n        val = JSON.stringify(fields[key])\n      }\n\n      form.append(key, val)\n    }\n\n    form.append('signature', signature)\n\n    _.each(this._streams, (value, key) => form.append(key, value))\n  }\n\n  // Implements HTTP GET query params, handling the case where the url already\n  // has params.\n  _appendParamsToUrl (url, params) {\n    const sigData = this.calcSignature(params)\n    const { signature } = sigData\n    let jsonParams = sigData.params\n\n    if (url.indexOf('?') === -1) {\n      url += `?signature=${signature}`\n    } else {\n      url += `&signature=${signature}`\n    }\n\n    jsonParams = encodeURIComponent(jsonParams)\n    url += `&params=${jsonParams}`\n\n    return url\n  }\n\n  // Responsible for including auth parameters in all requests\n  _prepareParams (params) {\n    if (params == null) {\n      params = {}\n    }\n    if (params.auth == null) {\n      params.auth = {}\n    }\n    if (params.auth.key == null) {\n      params.auth.key = this._authKey\n    }\n    if (params.auth.expires == null) {\n      params.auth.expires = this._getExpiresDate()\n    }\n\n    return JSON.stringify(params)\n  }\n\n  _getExpiresDate () {\n    const expiresDate = new Date()\n    expiresDate.setDate(expiresDate.getDate() + 1)\n    return expiresDate.toISOString()\n  }\n\n  _serviceUrl () {\n    return this._protocol + this._service\n  }\n\n  // Wrapper around __remoteJson which will retry in case of error\n  _remoteJson (opts, cb) {\n    const operation = retry.operation({\n      retries   : 5,\n      factor    : 3.28,\n      minTimeout: 1 * 1000,\n      maxTimeout: 8 * 1000,\n    })\n\n    operation.attempt(() => {\n      this.__remoteJson(opts, (err, result) => {\n        if (err != null) {\n          if (err.error === 'RATE_LIMIT_REACHED') {\n            console.warn(`Rate limit reached, retrying request in ${err.info.retryIn} seconds.`)\n            // FIXME uses private internals of node-retry\n            operation._timeouts.unshift(1000 * err.info.retryIn)\n            return operation.retry(err)\n          }\n\n          if (err.code === 'ENOTFOUND') {\n            console.warn(`The network connection is down, retrying request in 3 seconds.`)\n            // FIXME uses private internals of node-retry\n            operation._timeouts.unshift(3 * 1000)\n            return operation.retry(err)\n          }\n\n          if (err.error === 'GET_ACCOUNT_UNKNOWN_AUTH_KEY') {\n            console.warn(`Invalid auth key provided.`)\n            return cb(err)\n          }\n\n          if (err.error !== undefined) {\n            console.warn(err.error + ' - ' + err.message)\n            return cb(err)\n          }\n        }\n\n        if (operation.retry(err)) {\n          return\n        }\n\n        let mainError = null\n        if (err) {\n          mainError = operation.mainError()\n        }\n\n        cb(mainError, result)\n      })\n    })\n  }\n\n  // Responsible for making API calls. Automatically sends streams with any POST,\n  // PUT or DELETE requests. Automatically adds signature parameters to all\n  // requests. Also automatically parses the JSON response.\n  __remoteJson (opts, cb) {\n    const timeout = opts.timeout || 5000\n    let url = opts.url || null\n    const method = opts.method || 'get'\n\n    if (!url) {\n      const err = new Error('No url provided!')\n      return cb(err)\n    }\n\n    if (method === 'get' && opts.params != null) {\n      url = this._appendParamsToUrl(url, opts.params)\n    }\n\n    const requestOpts = {\n      uri: url,\n      timeout,\n    }\n\n    if (opts.headers != null) {\n      requestOpts.headers = opts.headers\n    }\n\n    const req = request[method](requestOpts, (err, { body, statusCode } = {}) => {\n      if (err) {\n        return cb(err)\n      }\n\n      // parse body\n      let result = null\n      try {\n        result = JSON.parse(body)\n      } catch (e) {\n        const abbr = `${body}`.substr(0, 255)\n        let msg = `Unable to parse JSON from '${requestOpts.uri}'. `\n        msg += `Code: ${statusCode}. Body: ${abbr}. `\n        return cb(new Error(msg))\n      }\n      if (statusCode !== 200 && statusCode !== 404 && statusCode >= 400 && statusCode <= 599) {\n        return cb(_.extend(new Error(), result))\n      }\n\n      return cb(null, result)\n    })\n\n    if (method === 'post' || method === 'put' || method === 'del') {\n      this._appendForm(req, opts.params, opts.fields)\n    }\n  }\n}\n\nmodule.exports = TransloaditClient\n"]}